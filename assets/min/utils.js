export const formFieldName=".form__field-control";export const formFields=document.querySelectorAll(formFieldName);let minViewportWidthField=document.querySelector("#min-viewport"),maxViewportWidthField=document.querySelector("#max-viewport"),minValueField=document.querySelector("#min-value"),maxValueField=document.querySelector("#max-value");export const settingOptionName=".setting-option";export const settingOptions=document.querySelectorAll(settingOptionName);export const storageKeyFormFields="form-fields";export const storageKeySettings="settings";let optionNestedCalc=document.querySelector("#option-nested-calc"),optionFontSize=document.querySelector("#option-font-size");export const outputText=document.querySelector(".output pre");export const copyOutputButtonName="[data-copy-output]";let copyOutputButton=document.querySelector(copyOutputButtonName),checkFormulaButton=document.querySelector("[data-check-formula]");export const resetInputsButtonName="[data-reset-inputs]";let resetInputsButton=document.querySelector(resetInputsButtonName),baseFontSize=16,decimalCount=4;export const numberPattern=/^\d*$/;export const decimalPattern=/^\d*\.?\d*$/;export const sanitizeInput=(e,t)=>{let o=e.value;e.addEventListener("input",()=>{let a=e.value.replace(",",".");if(e.value=a,t.test(a)){o=e.value;return}e.value=o})};export const dataManager={save(e,t){localStorage.setItem(e,JSON.stringify(t))},load:e=>JSON.parse(localStorage.getItem(e))||{}};export const formFieldsDataStorage=dataManager.load(storageKeyFormFields);export const settingsDataStorage=dataManager.load(storageKeySettings);let roundDecimals=(e,t)=>{let o=e.toFixed(t),a=/\.?0+$/;return o.replace(a,"")},removeLeadingZero=e=>{let t=/^0\./,o=Math.abs(e).toString().replace(t,".");return e<0?`-${o}`:o},formatValue=e=>{let t=[e=>roundDecimals(e,4),removeLeadingZero];return t.reduce((e,t)=>t(e),e)},calculateFormulaValues=(e,t,o,a)=>{let l=e/16,r=t/16,u=(a-o)/(r-l),i=-l*u+o,n=100*u;return{minValueCalculated:o,yAxisIntersectionCalculated:i,slopeMultipliedCalculated:n,maxValueCalculated:a}};export const calculateFormula=()=>{let e=parseInt(minViewportWidthField.value),t=parseInt(maxViewportWidthField.value),o=parseFloat(minValueField.value),a=parseFloat(maxValueField.value),{minValueCalculated:l,yAxisIntersectionCalculated:r,slopeMultipliedCalculated:u,maxValueCalculated:i}=calculateFormulaValues(e,t,o,a),n=formatValue(l),s=formatValue(r),c=formatValue(u),d=formatValue(i),p=`${n}rem`,m=`${s}rem + ${c}vw`,F=0===parseFloat(s),x=0===parseFloat(c);F&&(m=`${c}vw`),x&&(m=`${s}rem`);let v=`${d}rem`,f=`${p}, ${m}, ${v}`;!optionNestedCalc.checked||F||x||(f=`${p}, calc(${m}), ${v}`);let g=`clamp(${f})`,y=g;optionFontSize.checked&&(y=`font-size: ${g};`);let S=[l,r,u,i],V=S.some(e=>{let t=Number.isNaN(e),o=!Number.isFinite(e),a=e.toString().includes("e");return t||o?(y="Invalid values",!0):a?(y="Values too large",!0):void 0});V?(copyOutputButton.disabled=!0,checkFormulaButton.remove(),settingOptions.forEach(e=>{e.disabled=!0})):(copyOutputButton.disabled=!1,copyOutputButton.after(checkFormulaButton),settingOptions.forEach(e=>{e.disabled=!1})),outputText.innerText=y};export const updateCheckFormulaLink=()=>{let e=parseInt(minViewportWidthField.value),t=parseInt(maxViewportWidthField.value),o=parseFloat(minValueField.value),a=parseFloat(maxValueField.value),{minValueCalculated:l,yAxisIntersectionCalculated:r,slopeMultipliedCalculated:u,maxValueCalculated:i}=calculateFormulaValues(e,t,o,a),n=Math.round(16*l),s=roundDecimals(r,4),c=roundDecimals(u,4),d=Math.round(16*i),p=`https://modern-fluid-typography.vercel.app/?minSize=${n}&relativeSize=${s}&fluidSize=${c}&maxSize=${d}`;checkFormulaButton.href=p};export const formFieldsMutationObserver=()=>{let e=[...formFields].some(e=>{if(e.value!==e.dataset.value)return!0});if(!e){resetInputsButton.disabled=!0;return}resetInputsButton.disabled=!1};